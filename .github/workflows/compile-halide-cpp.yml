# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Compile Halide C++ on Windows/Linux

on:
  push:
    branches: [ master ]
  pull_request:
    types: [edited, submitted]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest, windows-latest, macos-latest]
        # TODO(Antony): add Python 3.9 to test the Meson build system support
        python-version: [3.8]

    steps:
    - name: Fetch sources
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install gcc toolchain
      run: sudo apt-get install build-essential
      if: startsWith(matrix.os, 'ubuntu') == true

    - name: Install MSVC toolchain
      uses: bus1/cabuild/action/msdevshell@v1
      with:
        architecture: x64
      if: startsWith(matrix.os, 'windows') == true

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install meson ninja

    - name: Cache 3rd party C++ projects
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-meson-cache
        path: proximal/halide/subprojects/packagecache/

    - name: Resolve C++ build dependencies
      run: meson setup proximal/halide proximal/halide/build
    
    - name: Build ProxImaL-codegen
      run: ninja -C proximal/halide/build ladmm-runtime

    - name: Build Python interfaces
      run: ninja -C proximal/halide/build python_interface

    - name: Run test suite
      run: ninja -C proximal/halide/build test

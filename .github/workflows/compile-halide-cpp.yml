# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Compile Halide C++ on Windows/Linux

on:
  push:
    branches: [ master ]
  pull_request:
    types: [edited, submitted]
    paths:
      - proximal/halide/**

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10"]

    steps:
    - name: Fetch sources
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip

    - name: Install gcc toolchain
      run: sudo apt-get install build-essential
      if: startsWith(matrix.os, 'ubuntu') == true

    - name: Install Python dependencies
      run: |
        pip install --upgrade uv
        uv pip install --system meson ninja

    - name: Cache 3rd party C++ projects
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-meson-cache
        path: proximal/halide/subprojects/packagecache/

    - name: Resolve C++ build dependencies (non-Windows)
      run: meson setup proximal/halide proximal/halide/build
      if: startsWith(matrix.os, 'window') == false

    - name: Resolve C++ build dependencies (msvc toolchain)
      run: meson setup --vsenv proximal/halide proximal/halide/build
      if: startsWith(matrix.os, 'window') == true

    - name: Build ProxImaL-codegen
      run: meson compile -C proximal/halide/build ladmm-runtime:alias

    - name: Build Python interfaces
      run: meson compile -C proximal/halide/build python_interface

    - name: Run test suite
      run: meson test -C proximal/halide/build --suite codegen
